from scrapli.decorators import TransportTimeout as TransportTimeout
from scrapli.exceptions import ScrapliConnectionError as ScrapliConnectionError, ScrapliConnectionNotOpened as ScrapliConnectionNotOpened
from scrapli.transport.base import AsyncTransport as AsyncTransport, BasePluginTransportArgs as BasePluginTransportArgs, BaseTransportArgs as BaseTransportArgs
from typing import Any

IAC: Any
DONT: Any
DO: Any
WONT: Any
WILL: Any

class PluginTransportArgs(BasePluginTransportArgs): ...

class AsynctelnetTransport(AsyncTransport):
    plugin_transport_args: Any = ...
    username_prompt: str = ...
    password_prompt: str = ...
    stdout: Any = ...
    stdin: Any = ...
    _initial_buf: bytes = ...
    _stdout_binary_transmission: bool = ...
    def __init__(self, base_transport_args: BaseTransportArgs, plugin_transport_args: PluginTransportArgs) -> None: ...
    def _handle_control_chars_response(self, control_buf: bytes, c: bytes) -> bytes: ...
    async def _handle_control_chars(self) -> None: ...
    async def open(self) -> None: ...
    def close(self) -> None: ...
    def isalive(self) -> bool: ...
    async def read(self) -> bytes: ...
    def write(self, channel_input: bytes) -> None: ...
